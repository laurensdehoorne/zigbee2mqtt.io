"use strict";(self.webpackChunkvp=self.webpackChunkvp||[]).push([[46467],{43870:(e,o,t)=>{t.r(o),t.d(o,{comp:()=>d,data:()=>l});var n=t(38178);const c={},d=(0,t(33649).A)(c,[["render",function(e,o){const t=(0,n.g2)("RouteLink");return(0,n.uX)(),(0,n.CE)("div",null,[o[7]||(o[7]=(0,n.Lk)("h1",{id:"livingwise-lvs-sc7",tabindex:"-1"},[(0,n.Lk)("a",{class:"header-anchor",href:"#livingwise-lvs-sc7"},[(0,n.Lk)("span",null,"LivingWise LVS-SC7")])],-1)),(0,n.Lk)("table",null,[o[6]||(o[6]=(0,n.Lk)("thead",null,[(0,n.Lk)("tr",null,[(0,n.Lk)("th"),(0,n.Lk)("th")])],-1)),(0,n.Lk)("tbody",null,[o[2]||(o[2]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Model"),(0,n.Lk)("td",null,"LVS-SC7")],-1)),(0,n.Lk)("tr",null,[o[1]||(o[1]=(0,n.Lk)("td",null,"Vendor",-1)),(0,n.Lk)("td",null,[(0,n.bF)(t,{to:"/supported-devices/#v=LivingWise"},{default:(0,n.k6)(()=>o[0]||(o[0]=[(0,n.eW)("LivingWise")])),_:1,__:[0]})])]),o[3]||(o[3]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Description"),(0,n.Lk)("td",null,"Scene controller")],-1)),o[4]||(o[4]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Exposes"),(0,n.Lk)("td",null,"action")],-1)),o[5]||(o[5]=(0,n.Lk)("tr",null,[(0,n.Lk)("td",null,"Picture"),(0,n.Lk)("td",null,[(0,n.Lk)("img",{src:"https://www.zigbee2mqtt.io/images/devices/LVS-SC7.png",alt:"LivingWise LVS-SC7"})])],-1))])]),o[8]||(o[8]=(0,n.Fv)('<h2 id="exposes" tabindex="-1"><a class="header-anchor" href="#exposes"><span>Exposes</span></a></h2><h3 id="action-enum" tabindex="-1"><a class="header-anchor" href="#action-enum"><span>Action (enum)</span></a></h3><p>Triggered action (e.g. a button click). Value can be found in the published state on the <code>action</code> property. It&#39;s not possible to read (<code>/get</code>) or write (<code>/set</code>) this value. The possible values are: <code>button_1_click</code>, <code>button_1_hold</code>, <code>button_1_release</code>, <code>button_2_click</code>, <code>button_2_hold</code>, <code>button_2_release</code>, <code>button_3_click</code>, <code>button_3_hold</code>, <code>button_3_release</code>, <code>button_4_click</code>, <code>button_4_hold</code>, <code>button_4_release</code>, <code>button_5_click</code>, <code>button_5_hold</code>, <code>button_5_release</code>, <code>button_6_click</code>, <code>button_6_hold</code>, <code>button_6_release</code>, <code>button_7_click</code>, <code>button_7_hold</code>, <code>button_7_release</code>.</p>',3))])}]]),l=JSON.parse('{"path":"/devices/LVS-SC7.html","title":"LivingWise LVS-SC7 control via MQTT","lang":"en-US","frontmatter":{"pageClass":"device-page","title":"LivingWise LVS-SC7 control via MQTT","description":"Integrate your LivingWise LVS-SC7 via Zigbee2MQTT with whatever smart home infrastructure you are using without the vendor\'s bridge or gateway.","addedAt":"2020-01-14T19:34:25.000Z"},"git":{"updatedTime":1753007469000,"contributors":[{"name":"laurensdehoorne","username":"laurensdehoorne","email":"55842703+laurensdehoorne@users.noreply.github.com","commits":1,"url":"https://github.com/laurensdehoorne"}],"changelog":[{"hash":"52a0b7fe21dfcc0dee1987b9bf9cb1912a35820e","time":1753007469000,"email":"55842703+laurensdehoorne@users.noreply.github.com","author":"laurensdehoorne","message":"Picture for ROB_200-026-1"}]},"filePathRelative":"devices/LVS-SC7.md"}')}}]);